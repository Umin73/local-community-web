name: Backend Auto Deploy to EC2

on:
  push:
    branches:
      - dev
      - feat/deploy/#30

jobs:
  Deploy_Backend_to_EC2:
    runs-on: ubuntu-latest

    steps:
      - name: EC2 서버에 SSH 원격 접속 후 자동 배포 작업 수행
        uses: appleboy/ssh-action@v1.0.3
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
          KAKAO_ADMIN_KEY: ${{ secrets.KAKAO_ADMIN_KEY }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          SPRING_MAIL_USERNAME: ${{ secrets.SPRING_MAIL_USERNAME }}
          SPRING_MAIL_PASSWORD: ${{ secrets.SPRING_MAIL_PASSWORD }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            # 환경 변수 설정
            export DATABASE_URL="${{ secrets.DATABASE_URL }}"
            export DATABASE_USERNAME="${{ secrets.DATABASE_USERNAME }}"
            export DATABASE_PASSWORD="${{ secrets.DATABASE_PASSWORD }}"
            export KAKAO_CLIENT_ID="${{ secrets.KAKAO_CLIENT_ID }}"
            export KAKAO_ADMIN_KEY="${{ secrets.KAKAO_ADMIN_KEY }}"
            export AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}"
            export AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}"
            export SPRING_MAIL_USERNAME="${{ secrets.SPRING_MAIL_USERNAME }}"
            export SPRING_MAIL_PASSWORD="${{ secrets.SPRING_MAIL_PASSWORD }}"

            # 설정 확인을 위한 환경 변수 출력
            echo "DATABASE_URL=$DATABASE_URL"
            echo "DATABASE_USERNAME=$DATABASE_USERNAME"

            # 프로젝트 디렉토리로 이동
            cd /home/ubuntu/local-community-web

            # 로컬 변경 사항 Stash
            git stash || true

            # feat/deploy/#30 브랜치로 전환
            git fetch origin
            git checkout feat/deploy/#30 || git checkout -b feat/deploy/#30 origin/feat/deploy/#30
            git pull origin feat/deploy/#30

            # backend 디렉토리로 이동
            cd backend

            # Gradle 빌드 (테스트 제외)
            chmod +x ./gradlew
            ./gradlew clean build -x test

            # 기존 애플리케이션 종료 및 새 애플리케이션 실행
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar build/libs/*SNAPSHOT.jar > ./output.log 2>&1 &
